name: Release

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  pull_request:
    types: 
        - closed
    branches:
        - 'releases/**'

jobs:
  create-pr:
    name: Create Release PR
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%d')-$(openssl rand -hex 4)" >> $GITHUB_ENV

      - name: Update versions
        run: |
          pnpm nx release version ${{ inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract version from git diff
        id: extract_version
        run: |
          # Check for changes in package.json files using git diff --cached
          VERSION=$(git diff --cached | grep '^\+.*"version":' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          
          # If not found in diff --cached, try regular git diff (for already committed changes)
          if [ -z "$VERSION" ]; then
            VERSION=$(git diff | grep '^\+.*"version":' | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          fi
          
          # If still not found, try looking at all package.json files
          if [ -z "$VERSION" ]; then
            # Find the main package.json or any package with recent version changes
            VERSION=$(grep -o '"version": "[0-9]\+\.[0-9]\+\.[0-9]\+"' package.json 2>/dev/null | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          fi
          
          if [ -n "$VERSION" ]; then
            echo "Found version: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "Could not extract version number from diff"
            # Fallback to a default format using the increment type
            echo "VERSION=new-${{ inputs.version }}-version" >> $GITHUB_ENV
            echo "version=new-${{ inputs.version }}-version" >> $GITHUB_OUTPUT
          fi

      - name: Update changelogs
        run: |
          pnpm nx release changelog ${{ env.VERSION }} --git-commit=false --git-tag=false --git-push=false --git-remote=not-exist 2>/dev/null || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "chore: release v${{ env.VERSION }}"
          body: |
            This PR contains version updates for release v${{ env.VERSION }}
            
            Increment type: `${{ inputs.version }}`
            
            Please review the changes. If merged, the 'publish' job will attempt to publish this version.
          branch: release/${{ env.NOW }}
          base: ${{ github.base_ref }}

  publish:
    name: Publish to npm and create GitHub release
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Publish packages
        run: |
          pnpm nx release publish --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
